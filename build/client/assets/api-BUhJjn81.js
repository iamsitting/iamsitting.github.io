const c=new Map;function g(t){return c.has(t)||c.set(t,c.size+1),c.get(t)}const w=async(t=1,r="",s)=>{try{const o=await fetch("/posts.json");if(!o.ok)throw new Error("Failed to fetch posts");let e=await o.json();if(r){const n=r.toLowerCase();e=e.filter(a=>a.title.toLowerCase().includes(n)||a.description.toLowerCase().includes(n))}s&&(e=e.filter(n=>n.category&&g(n.category.name)===s)),e.sort((n,a)=>new Date(a.publishedAt).getTime()-new Date(n.publishedAt).getTime());const i=(t-1)*10,l=i+10;return{posts:e.slice(i,l),pagination:{page:t,pageSize:10,pageCount:Math.ceil(e.length/10),total:e.length}}}catch(o){throw console.error("Error fetching posts:",o),new Error("Server error")}},p=async t=>{try{const r=await fetch("/posts.json");if(!r.ok)throw new Error("Failed to fetch posts");return(await r.json()).find(e=>e.slug===t)||null}catch(r){throw console.error("Error fetching post:",r),new Error("Server error")}},f=async()=>{try{const t=await fetch("/posts.json");if(!t.ok)throw new Error("Failed to fetch posts");const r=await t.json(),s=new Map;return r.forEach(o=>{if(o.category&&!s.has(o.category.name)){const e=g(o.category.name);s.set(o.category.name,{documentId:e,name:o.category.name,description:""})}}),Array.from(s.values())}catch(t){throw console.error("Error fetching categories:",t),new Error("Server error")}};export{f as a,p as b,w as g};
